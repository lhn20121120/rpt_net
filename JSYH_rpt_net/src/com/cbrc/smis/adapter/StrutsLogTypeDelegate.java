
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;

import com.cbrc.smis.dao.DBConn;
import com.cbrc.smis.hibernate.LogType;
import com.cbrc.smis.util.FitechException;
/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for LogType data (i.e. 
 * com.cbrc.smis.form.LogTypeForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsLogTypeDelegate {
	private static FitechException log=new FitechException(StrutsLogTypeDelegate.class);
	
	/**
	 * 获得日志类型信息列表
	 * 
	 * @author rds
	 * @serialData 2005-12-5
	 * @return HashMap 如果无记录，返回null
	 */
	public static HashMap find() throws Exception{
		HashMap logTypes=null;
		
		LogType logType=null;
		
		DBConn conn=null;
		try{
			String hql="from LogType lt";
			conn=new DBConn();	
			List list=conn.openSession().find(hql);

			if(list!=null && list.size()>0){
				logTypes=new HashMap();
				for(int i=0;i<list.size();i++){
					logType=(LogType)list.get(i);
					logTypes.put(logType.getLogTypeFlag(),logType.getLogTypeId());
				}
			}

		}catch(HibernateException he){
			log.printStackTrace(he);
		}finally{
			if(conn!=null) conn.closeSession();
		}
		
		return logTypes;
	}
	
   /**
    * Create a new com.cbrc.smis.form.LogTypeForm object and persist (i.e. insert) it.
    *
    * @param   logTypeForm   The object containing the data for the new com.cbrc.smis.form.LogTypeForm object
    * @exception   Exception   If the new com.cbrc.smis.form.LogTypeForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.LogTypeForm create (com.cbrc.smis.form.LogTypeForm logTypeForm) throws Exception {
      com.cbrc.smis.hibernate.LogType logTypePersistence = new com.cbrc.smis.hibernate.LogType ();
      TranslatorUtil.copyVoToPersistence(logTypePersistence, logTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: logTypePersistence = (com.cbrc.smis.hibernate.LogType)session.save(logTypePersistence);
session.save(logTypePersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(logTypePersistence, logTypeForm);
      return logTypeForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.LogTypeForm object.
    *
    * @param   logTypeForm   The com.cbrc.smis.form.LogTypeForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.LogTypeForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.LogTypeForm update (com.cbrc.smis.form.LogTypeForm logTypeForm) throws Exception {
      com.cbrc.smis.hibernate.LogType logTypePersistence = new com.cbrc.smis.hibernate.LogType ();
      TranslatorUtil.copyVoToPersistence(logTypePersistence, logTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(logTypePersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(logTypePersistence, logTypeForm);
      return logTypeForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.LogTypeForm object for editing.
    *
    * @param   logTypeForm   The com.cbrc.smis.form.LogTypeForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.LogTypeForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.LogTypeForm edit (com.cbrc.smis.form.LogTypeForm logTypeForm) throws Exception {
      com.cbrc.smis.hibernate.LogType logTypePersistence = new com.cbrc.smis.hibernate.LogType ();
      TranslatorUtil.copyVoToPersistence(logTypePersistence, logTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
logTypePersistence = (com.cbrc.smis.hibernate.LogType)session.load(com.cbrc.smis.hibernate.LogType.class, logTypePersistence.getLogTypeId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(logTypePersistence, logTypeForm);
      return logTypeForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.LogTypeForm object.
    *
    * @param   logTypeForm   The com.cbrc.smis.form.LogTypeForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.LogTypeForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.LogTypeForm logTypeForm) throws Exception {
      com.cbrc.smis.hibernate.LogType logTypePersistence = new com.cbrc.smis.hibernate.LogType ();
      TranslatorUtil.copyVoToPersistence(logTypePersistence, logTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
logTypePersistence = (com.cbrc.smis.hibernate.LogType)session.load(com.cbrc.smis.hibernate.LogType.class, logTypePersistence.getLogTypeId());
session.delete(logTypePersistence);
tx.commit();
session.close();
   }

   /**
    * 功能：取得日志类型表的所有记录
    * 参数：无
    * 返回值：List对象 包含查询到的所有记录	
    * Retrieve all existing com.cbrc.smis.form.LogTypeForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.LogTypeForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
	   	List result = null;
		
		  DBConn conn = null;
		  Session session = null;	  
		  try{
			  conn = new DBConn();
			  session = conn.openSession();
			  result = session.find("from LogType");
			  if(result!=null){
				  //// System.out.println("Search result: "+retVals.size());
				  ArrayList logType_vos = new ArrayList();
				  //将查询到的记录存放入List中
			      for (Iterator it = result.iterator(); it.hasNext(); ) {
			         LogType logTypePersistence = (LogType)it.next();
			         logType_vos.add(logTypePersistence);
			      }
			      result = logType_vos;
			  }	      
		  }catch(HibernateException he){
			  he.printStackTrace();
		  }finally{
			  if(conn!=null) conn.closeSession();		  
		  }
	      return result;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.LogTypeForm objects for editing.
    *
    * @param   logTypeForm   The com.cbrc.smis.form.LogTypeForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.LogTypeForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.LogTypeForm logTypeForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.LogType as obj1 where obj1.logType='" + logTypeForm.getLogType() + "'"));
tx.commit();
session.close();
      ArrayList logType_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.LogTypeForm logTypeFormTemp = new com.cbrc.smis.form.LogTypeForm();
         com.cbrc.smis.hibernate.LogType logTypePersistence = (com.cbrc.smis.hibernate.LogType)it.next();
         TranslatorUtil.copyPersistenceToVo(logTypePersistence, logTypeFormTemp);
         logType_vos.add(logTypeFormTemp);
      }
      retVals = logType_vos;
      return retVals;
   }

}
