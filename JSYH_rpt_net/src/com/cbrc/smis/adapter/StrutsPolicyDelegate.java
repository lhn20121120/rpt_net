
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for Policy data (i.e. 
 * com.cbrc.smis.form.PolicyForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsPolicyDelegate {


   /**
    * Create a new com.cbrc.smis.form.PolicyForm object and persist (i.e. insert) it.
    *
    * @param   policyForm   The object containing the data for the new com.cbrc.smis.form.PolicyForm object
    * @exception   Exception   If the new com.cbrc.smis.form.PolicyForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.PolicyForm create (com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      com.cbrc.smis.hibernate.Policy policyPersistence = new com.cbrc.smis.hibernate.Policy ();
      TranslatorUtil.copyVoToPersistence(policyPersistence, policyForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: policyPersistence = (com.cbrc.smis.hibernate.Policy)session.save(policyPersistence);
session.save(policyPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyPersistence, policyForm);
      return policyForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.PolicyForm object.
    *
    * @param   policyForm   The com.cbrc.smis.form.PolicyForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.PolicyForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.PolicyForm update (com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      com.cbrc.smis.hibernate.Policy policyPersistence = new com.cbrc.smis.hibernate.Policy ();
      TranslatorUtil.copyVoToPersistence(policyPersistence, policyForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(policyPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyPersistence, policyForm);
      return policyForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.PolicyForm object for editing.
    *
    * @param   policyForm   The com.cbrc.smis.form.PolicyForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.PolicyForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.PolicyForm edit (com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      com.cbrc.smis.hibernate.Policy policyPersistence = new com.cbrc.smis.hibernate.Policy ();
      TranslatorUtil.copyVoToPersistence(policyPersistence, policyForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
policyPersistence = (com.cbrc.smis.hibernate.Policy)session.load(com.cbrc.smis.hibernate.Policy.class, policyPersistence.getPolicyId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyPersistence, policyForm);
      return policyForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.PolicyForm object.
    *
    * @param   policyForm   The com.cbrc.smis.form.PolicyForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.PolicyForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      com.cbrc.smis.hibernate.Policy policyPersistence = new com.cbrc.smis.hibernate.Policy ();
      TranslatorUtil.copyVoToPersistence(policyPersistence, policyForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
policyPersistence = (com.cbrc.smis.hibernate.Policy)session.load(com.cbrc.smis.hibernate.Policy.class, policyPersistence.getPolicyId());
session.delete(policyPersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.PolicyForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.PolicyForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Policy"));
tx.commit();
session.close();
      ArrayList policy_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.PolicyForm policyFormTemp = new com.cbrc.smis.form.PolicyForm();
         com.cbrc.smis.hibernate.Policy policyPersistence = (com.cbrc.smis.hibernate.Policy)it.next();
         TranslatorUtil.copyPersistenceToVo(policyPersistence, policyFormTemp);
         policy_vos.add(policyFormTemp);
      }
      retVals = policy_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.PolicyForm objects for editing.
    *
    * @param   policyForm   The com.cbrc.smis.form.PolicyForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.PolicyForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Policy as obj1 where obj1.calId='" + policyForm.getCalId() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Policy as obj1 where obj1.defineTime='" + policyForm.getDefineTime() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Policy as obj1 where obj1.policyName='" + policyForm.getPolicyName() + "'"));
tx.commit();
session.close();
      ArrayList policy_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.PolicyForm policyFormTemp = new com.cbrc.smis.form.PolicyForm();
         com.cbrc.smis.hibernate.Policy policyPersistence = (com.cbrc.smis.hibernate.Policy)it.next();
         TranslatorUtil.copyPersistenceToVo(policyPersistence, policyFormTemp);
         policy_vos.add(policyFormTemp);
      }
      retVals = policy_vos;
      return retVals;
   }

   /**
    * This method will return all objects referenced by PolicyType
    */
   public static List getPolicyType(com.cbrc.smis.form.PolicyForm policyForm) throws Exception {
      List retVals = new ArrayList();
      com.cbrc.smis.hibernate.Policy policyPersistence = null;
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
policyPersistence = (com.cbrc.smis.hibernate.Policy)session.load(com.cbrc.smis.hibernate.Policy.class, policyPersistence.getPolicyId());
tx.commit();
session.close();
retVals.add(policyPersistence.getPolicyType());
      ArrayList POLICY_TYPE_ID_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.PolicyTypeForm POLICY_TYPE_ID_Temp = new com.cbrc.smis.form.PolicyTypeForm();
         com.cbrc.smis.hibernate.PolicyType POLICY_TYPE_ID_PO = (com.cbrc.smis.hibernate.PolicyType)it.next();
         TranslatorUtil.copyPersistenceToVo(POLICY_TYPE_ID_PO, POLICY_TYPE_ID_Temp);
         POLICY_TYPE_ID_vos.add(POLICY_TYPE_ID_Temp);
      }
      retVals = POLICY_TYPE_ID_vos;
      return retVals;
    }
}
