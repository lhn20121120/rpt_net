
package com.gather.adapter;

import java.util.ArrayList;
import java.util.List;

import net.sf.hibernate.Session;

import com.gather.common.Log;
import com.gather.dao.DBConn;
import com.gather.hibernate.MMainRep;
import com.gather.struts.forms.MMainRepForm;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for MMainRep data (i.e. 
 * com.gather.struts.forms.MMainRepForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsMMainRepDelegate {
	
	
	
	
	/**
	 *  @得到主报表名称
	 *  @param repId 主报表id
	 */
	public static String getRepName(Integer repId){
		DBConn conn=new DBConn();
		Session session=conn.openSession();
		String repName="";
		String hsql="select obj.repCnName from com.gather.hibernate.MMainRep as obj where obj.repId="+repId;
		List list=new ArrayList();
		try{
		   list.addAll(session.find(hsql));
		   if(list!=null && list.size()>0){
			   repName=(String)list.get(0);
		   }
		}catch(Exception e){
			new Log(StrutsMMainRepDelegate.class).info(":::class:StrutsMMainRepDelegate --  method:getRepName 异常："+e.getMessage());
			e.printStackTrace();
		}finally{
			try{
				session.close();
			}catch(Exception e){e.printStackTrace();}
		}
	return repName;
	}
	  /**
     * @author linfeng
     * @function 得到所有数据
     * @return list 
     */
	public static List getAll(){
		List list=new ArrayList();
		List resultList=new ArrayList();
		DBConn conn=new DBConn();
		Session session=conn.openSession();
		String hsql="from com.gather.hibernate.MMainRep as obj";
		try{
		list.addAll(session.find(hsql));
		if(list!=null && list.size()>0){
			for(int i=0;i<list.size();i++){
				MMainRep report=(MMainRep)list.get(i);
				MMainRepForm myForm=new MMainRepForm();
				TranslatorUtil.copyPersistenceToVo(report,myForm);	
				resultList.add(myForm);
			}
		}
		}catch(Exception e){
			new Log(StrutsMMainRepDelegate.class).info(":::class:StrutsMMainRepDelegate --  method:getAll() 异常："+e.getMessage());
			e.printStackTrace();
		}finally{
			try{
				if(session!=null) session.close();
			}catch(Exception e){e.printStackTrace();}
		}
	return resultList;
	}

   /**
    * Create a new com.gather.struts.forms.MMainRepForm object and persist (i.e. insert) it.
    *
    * @param   mMainRepForm   The object containing the data for the new com.gather.struts.forms.MMainRepForm object
    * @exception   Exception   If the new com.gather.struts.forms.MMainRepForm object cannot be created or persisted.
    */
   public static boolean  create (com.gather.struts.forms.MMainRepForm mMainRepForm) throws Exception {
      com.gather.hibernate.MMainRep mMainRepPersistence = new com.gather.hibernate.MMainRep();
      try{
      TranslatorUtil.copyVoToPersistence(mMainRepPersistence, mMainRepForm);
      DBConn conn=new DBConn();
      Session session=conn.beginTransaction();
      session.save(mMainRepPersistence);
      conn.endTransaction(true);
      return true;
      }catch(Exception e)
      {
    	  new Log(StrutsMMainRepDelegate.class).info(":::class:StrutsMMainRepDelegate --  method:create 异常："+e.getMessage());
    	  throw e;
      }
   }

}
