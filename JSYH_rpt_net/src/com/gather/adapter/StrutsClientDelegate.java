
package com.gather.adapter;

import net.sf.hibernate.Session;

import com.gather.common.Log;
import com.gather.dao.DBConn;
/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for Client data (i.e. 
 * com.gather.struts.ClientForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsClientDelegate {


   /**
    * Create a new com.gather.struts.ClientForm object and persist (i.e. insert) it.
    *
    * @param   clientForm   The object containing the data for the new com.gather.struts.ClientForm object
    * @exception   Exception   If the new com.gather.struts.ClientForm object cannot be created or persisted.
    */
   public static boolean create (com.gather.struts.forms.ClientForm clientForm) throws Exception {
      com.gather.hibernate.Client clientPersistence = new com.gather.hibernate.Client ();
try{
TranslatorUtil.copyVoToPersistence(clientPersistence, clientForm);
DBConn conn=new DBConn();
Session session=conn.beginTransaction();
session.save(clientPersistence);
conn.endTransaction(true);
return true;
}catch(Exception e)
{
	new Log(StrutsClientDelegate.class).info(":::class:StrutsClientDelegate --  method: create “Ï≥££∫"+e.getMessage());
	throw e;
	}
  }
}
