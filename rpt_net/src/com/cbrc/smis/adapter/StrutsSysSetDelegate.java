
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Query;
import net.sf.hibernate.Session;

import com.cbrc.smis.dao.DBConn;
import com.cbrc.smis.form.SysParameterForm;
import com.cbrc.smis.hibernate.SysParameter;
import com.cbrc.smis.util.FitechException;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for SysSet data (i.e. 
 * com.cbrc.smis.form.SysSetForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsSysSetDelegate {

	private static FitechException log=new FitechException(StrutsMCurUnitDelegate.class);
   /**
    * Create a new com.cbrc.smis.form.SysSetForm object and persist (i.e. insert) it.
    *
    * @param   sysSetForm   The object containing the data for the new com.cbrc.smis.form.SysSetForm object
    * @exception   Exception   If the new com.cbrc.smis.form.SysSetForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.SysSetForm create (com.cbrc.smis.form.SysSetForm sysSetForm) throws Exception {
      com.cbrc.smis.hibernate.SysSet sysSetPersistence = new com.cbrc.smis.hibernate.SysSet ();
      TranslatorUtil.copyVoToPersistence(sysSetPersistence, sysSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: sysSetPersistence = (com.cbrc.smis.hibernate.SysSet)session.save(sysSetPersistence);
session.save(sysSetPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(sysSetPersistence, sysSetForm);
      return sysSetForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.SysSetForm object.
    *
    * @param   sysSetForm   The com.cbrc.smis.form.SysSetForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.SysSetForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.SysSetForm update (com.cbrc.smis.form.SysSetForm sysSetForm) throws Exception {
      com.cbrc.smis.hibernate.SysSet sysSetPersistence = new com.cbrc.smis.hibernate.SysSet ();
      TranslatorUtil.copyVoToPersistence(sysSetPersistence, sysSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(sysSetPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(sysSetPersistence, sysSetForm);
      return sysSetForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.SysSetForm object for editing.
    *
    * @param   sysSetForm   The com.cbrc.smis.form.SysSetForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.SysSetForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.SysSetForm edit (com.cbrc.smis.form.SysSetForm sysSetForm) throws Exception {
      com.cbrc.smis.hibernate.SysSet sysSetPersistence = new com.cbrc.smis.hibernate.SysSet ();
      TranslatorUtil.copyVoToPersistence(sysSetPersistence, sysSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
sysSetPersistence = (com.cbrc.smis.hibernate.SysSet)session.load(com.cbrc.smis.hibernate.SysSet.class, sysSetPersistence.getSysSetId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(sysSetPersistence, sysSetForm);
      return sysSetForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.SysSetForm object.
    *
    * @param   sysSetForm   The com.cbrc.smis.form.SysSetForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.SysSetForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.SysSetForm sysSetForm) throws Exception {
      com.cbrc.smis.hibernate.SysSet sysSetPersistence = new com.cbrc.smis.hibernate.SysSet ();
      TranslatorUtil.copyVoToPersistence(sysSetPersistence, sysSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
sysSetPersistence = (com.cbrc.smis.hibernate.SysSet)session.load(com.cbrc.smis.hibernate.SysSet.class, sysSetPersistence.getSysSetId());
session.delete(sysSetPersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.SysSetForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.SysSetForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.SysSet"));
tx.commit();
session.close();
      ArrayList sysSet_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.SysSetForm sysSetFormTemp = new com.cbrc.smis.form.SysSetForm();
         com.cbrc.smis.hibernate.SysSet sysSetPersistence = (com.cbrc.smis.hibernate.SysSet)it.next();
         TranslatorUtil.copyPersistenceToVo(sysSetPersistence, sysSetFormTemp);
         sysSet_vos.add(sysSetFormTemp);
      }
      retVals = sysSet_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.SysSetForm objects for editing.
    *
    * @param   sysSetForm   The com.cbrc.smis.form.SysSetForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.SysSetForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.SysSetForm sysSetForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.SysSet as obj1 where obj1.sysSetKey='" + sysSetForm.getSysSetKey() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.SysSet as obj1 where obj1.sysSetValue='" + sysSetForm.getSysSetValue() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.SysSet as obj1 where obj1.memo='" + sysSetForm.getMemo() + "'"));
tx.commit();
session.close();
      ArrayList sysSet_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.SysSetForm sysSetFormTemp = new com.cbrc.smis.form.SysSetForm();
         com.cbrc.smis.hibernate.SysSet sysSetPersistence = (com.cbrc.smis.hibernate.SysSet)it.next();
         TranslatorUtil.copyPersistenceToVo(sysSetPersistence, sysSetFormTemp);
         sysSet_vos.add(sysSetFormTemp);
      }
      retVals = sysSet_vos;
      return retVals;
   }
   
   /**
	 * 取得按条件查询到的记录条数
	 * @return int 查询到的记录条数	
	 */
	public static int getRecordCount(){
	   
		int count=0;	   	 
		//连接对象和会话对象初始化	   
		DBConn conn=null;					   
		Session session=null;

		//查询条件HQL的生成	   
		
		try{    	 
			String hql = "select count(*) from SysParameter mcu  where mcu.parName!='ENCRYPT'";	     
			//conn对象的实例化	    	  
			conn=new DBConn();    	  
			//打开连接开始会话    	  
			session=conn.openSession(); 
			
			List list=session.find(hql.toString());    	  
			if(list!=null && list.size()==1){    		
				count=((Integer)list.get(0)).intValue();    	  
			}
		}catch(HibernateException he){    
			log.printStackTrace(he);      
		}catch(Exception e){    	
			log.printStackTrace(e);     
		}finally{    	
			//如果连接存在，则断开，结束会话，返回    	  
			if(conn!=null) conn.closeSession();      
		}        
		return count;   
	}

	/**
	 * 查找货币单位    
	 * @param mCurUnitForm MCurUnitForm 查询表单对象
	 * @return List 如果查找到记录，返回List记录集；否则，返回null
	 */
	public static List select(int offset,int limit){

		//List集合的定义 	   
		List refVals=null;		
		//连接对象和会话对象初始化	   
		DBConn conn=null;	   
		Session session=null;
	   	   
 
	
		try{    	 
			//初始化    	  
			String hql ="from SysParameter mcu where mcu.parName!='ENCRYPT'";		 	  
			//conn对象的实例化    	  
			conn=new DBConn();    	  
			//打开连接开始会话    	  
			session=conn.openSession();
    	  			
			Query query=session.createQuery(hql.toString());		  
			query.setFirstResult(offset).setMaxResults(limit);		  
			List list=query.list();
		      	  
			if (list!=null){    		
				refVals = new ArrayList();    		  
				//循环读取数据库符合条件记录		      
				for (Iterator it = list.iterator(); it.hasNext(); ) {		        
					SysParameterForm sysParameterForm = new SysParameterForm();		         
					SysParameter sysParameterPersistence = (SysParameter)it.next();		         
					TranslatorUtil.copyPersistenceToVo(sysParameterPersistence, sysParameterForm);		         
					refVals.add(sysParameterForm);		      
				}    	   
			}      
		}catch(HibernateException he){    	
			refVals=null;    	  
			log.printStackTrace(he);      
		}catch(Exception e){    	
			refVals=null;      	  
			log.printStackTrace(e);      
		}finally{    	
			//如果连接存在，则断开，结束会话，返回    	  
			if(conn!=null) conn.closeSession();      
		}
		return refVals;   
	}
	/**
	 * 修改系统参数
	 * @param departmentForm
	 * @return
	 * @throws Exception
	 */
	public static boolean updateSysParameter (String  parType,String parName,Integer parValue) throws Exception {
	    
	       boolean result = false;
	       DBConn conn =null;
	       Session session =null;
	       if(parType!=null && parName != null && parValue != null )
	   
	       {
	           try
	           {
	               conn = new DBConn();
	               session = conn.beginTransaction(); 
	               SysParameter sysParameter = (SysParameter)session.load(SysParameter.class,parName);
	               sysParameter.setParValue(parValue);
	                             
	               session.update(sysParameter);
	               session.flush();
	               result = true;
	           }
	           catch(Exception e)
	           {
	               log.printStackTrace(e);
	               result = false;
	           }
	           finally{
	               if(conn!=null)
	                   conn.endTransaction(result);
	           }
	       }
	      return result;
	   }

	
	public static Integer loadSysParameter(String parName){
	
		Integer parValue = null;
		//连接对象和会话对象初始化	   
		DBConn conn=null;	   
		Session session=null;
		try{    	 
			//初始化    	  
			String hql ="select mcu.parValue from SysParameter mcu where mcu.parName= '"+parName.trim()+"'";		 	  
			//conn对象的实例化    	  
			conn=new DBConn();    	  
			//打开连接开始会话    	  
			session=conn.openSession();
    	  			
			Query query=session.createQuery(hql.toString());		  	  
			List list =query.list();
			if (list!=null&&list.size()>0){    		
				parValue=(Integer)list.get(0);
				
			}      
		}catch(HibernateException he){    	
			parValue = null;
			log.printStackTrace(he);      
		}catch(Exception e){    
			parValue = null;
			log.printStackTrace(e);      
		}finally{    	
			//如果连接存在，则断开，结束会话，返回    	  
			if(conn!=null) conn.closeSession();      
		}
		return parValue;   
	}
}
