
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for PolicyType data (i.e. 
 * com.cbrc.smis.form.PolicyTypeForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsPolicyTypeDelegate {


   /**
    * Create a new com.cbrc.smis.form.PolicyTypeForm object and persist (i.e. insert) it.
    *
    * @param   policyTypeForm   The object containing the data for the new com.cbrc.smis.form.PolicyTypeForm object
    * @exception   Exception   If the new com.cbrc.smis.form.PolicyTypeForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.PolicyTypeForm create (com.cbrc.smis.form.PolicyTypeForm policyTypeForm) throws Exception {
      com.cbrc.smis.hibernate.PolicyType policyTypePersistence = new com.cbrc.smis.hibernate.PolicyType ();
      TranslatorUtil.copyVoToPersistence(policyTypePersistence, policyTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: policyTypePersistence = (com.cbrc.smis.hibernate.PolicyType)session.save(policyTypePersistence);
session.save(policyTypePersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyTypePersistence, policyTypeForm);
      return policyTypeForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.PolicyTypeForm object.
    *
    * @param   policyTypeForm   The com.cbrc.smis.form.PolicyTypeForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.PolicyTypeForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.PolicyTypeForm update (com.cbrc.smis.form.PolicyTypeForm policyTypeForm) throws Exception {
      com.cbrc.smis.hibernate.PolicyType policyTypePersistence = new com.cbrc.smis.hibernate.PolicyType ();
      TranslatorUtil.copyVoToPersistence(policyTypePersistence, policyTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(policyTypePersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyTypePersistence, policyTypeForm);
      return policyTypeForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.PolicyTypeForm object for editing.
    *
    * @param   policyTypeForm   The com.cbrc.smis.form.PolicyTypeForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.PolicyTypeForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.PolicyTypeForm edit (com.cbrc.smis.form.PolicyTypeForm policyTypeForm) throws Exception {
      com.cbrc.smis.hibernate.PolicyType policyTypePersistence = new com.cbrc.smis.hibernate.PolicyType ();
      TranslatorUtil.copyVoToPersistence(policyTypePersistence, policyTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
policyTypePersistence = (com.cbrc.smis.hibernate.PolicyType)session.load(com.cbrc.smis.hibernate.PolicyType.class, policyTypePersistence.getPolicyTypeId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(policyTypePersistence, policyTypeForm);
      return policyTypeForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.PolicyTypeForm object.
    *
    * @param   policyTypeForm   The com.cbrc.smis.form.PolicyTypeForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.PolicyTypeForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.PolicyTypeForm policyTypeForm) throws Exception {
      com.cbrc.smis.hibernate.PolicyType policyTypePersistence = new com.cbrc.smis.hibernate.PolicyType ();
      TranslatorUtil.copyVoToPersistence(policyTypePersistence, policyTypeForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
policyTypePersistence = (com.cbrc.smis.hibernate.PolicyType)session.load(com.cbrc.smis.hibernate.PolicyType.class, policyTypePersistence.getPolicyTypeId());
session.delete(policyTypePersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.PolicyTypeForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.PolicyTypeForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.PolicyType"));
tx.commit();
session.close();
      ArrayList policyType_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.PolicyTypeForm policyTypeFormTemp = new com.cbrc.smis.form.PolicyTypeForm();
         com.cbrc.smis.hibernate.PolicyType policyTypePersistence = (com.cbrc.smis.hibernate.PolicyType)it.next();
         TranslatorUtil.copyPersistenceToVo(policyTypePersistence, policyTypeFormTemp);
         policyType_vos.add(policyTypeFormTemp);
      }
      retVals = policyType_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.PolicyTypeForm objects for editing.
    *
    * @param   policyTypeForm   The com.cbrc.smis.form.PolicyTypeForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.PolicyTypeForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.PolicyTypeForm policyTypeForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.PolicyType as obj1 where obj1.policyTypeName='" + policyTypeForm.getPolicyTypeName() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.PolicyType as obj1 where obj1.memo='" + policyTypeForm.getMemo() + "'"));
tx.commit();
session.close();
      ArrayList policyType_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.PolicyTypeForm policyTypeFormTemp = new com.cbrc.smis.form.PolicyTypeForm();
         com.cbrc.smis.hibernate.PolicyType policyTypePersistence = (com.cbrc.smis.hibernate.PolicyType)it.next();
         TranslatorUtil.copyPersistenceToVo(policyTypePersistence, policyTypeFormTemp);
         policyType_vos.add(policyTypeFormTemp);
      }
      retVals = policyType_vos;
      return retVals;
   }

}
