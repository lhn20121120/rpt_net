
package com.cbrc.smis.adapter;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;

import com.cbrc.smis.dao.DBConn;
import com.cbrc.smis.form.ReportAgainSetForm;
import com.cbrc.smis.hibernate.ReportAgainSet;
import com.cbrc.smis.util.FitechException;
/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for ReportAgainSet data (i.e. 
 * com.cbrc.smis.form.ReportAgainSetForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsReportAgainSetDelegate {
	private static FitechException log=new FitechException(StrutsReportAgainSetDelegate.class);
	/**
	 * 
	 * @author jhb
	 * @return list
	 */
	public static List find(){
       List reslist=new ArrayList();	
     
		DBConn conn=null;
		try{
		//	// System.out.println("sssssssssssssssssssssssssssssssssssssssssssssssssssss");
			conn=new DBConn();
			String hql="from ReportAgainSet ras where 1=1";
			List list=conn.openSession().find(hql);
			for(int i=0;i<list.size();i++){
				ReportAgainSet ras=(ReportAgainSet)list.get(i);
				  ReportAgainSetForm rasForm=new ReportAgainSetForm();
				  TranslatorUtil.copyPersistenceToVo(ras, rasForm);
				  reslist.add(rasForm);
			}
		}catch(HibernateException he){
			reslist=null;
			log.printStackTrace(he);
		}catch(Exception e){
			reslist=null;
			log.printStackTrace(e);
		}finally{
			if(conn!=null) conn.closeSession();
		}
		
		return reslist;
	}
	/**
	 * 已使用hibernate 卞以刚 2011-12-21
	 * 获得重报设置Form
	 * 
	 * @author rds 
	 * @date 2006-01-31 21:41
	 * 
	 * @param repInId Integer 实际子报Id
	 * @return ReportAgainSetForm
	 */
	public static ReportAgainSetForm getReportAgainSetInfo(Integer repInId){
		ReportAgainSetForm rasForm=null;
		
		DBConn conn=null;
		try{
			conn=new DBConn();
			String hql="from ReportAgainSet ras where ras.repInId=" + repInId;
			List list=conn.openSession().find(hql);
			if(list!=null && list.size()>0){
				ReportAgainSet ras=(ReportAgainSet)list.get(0);
				
				rasForm=new ReportAgainSetForm();
				rasForm.setRasId(ras.getRasId());
				rasForm.setCause(ras.getCause());
				rasForm.setSetDate(new Timestamp(ras.getSetDate().getTime()));
				rasForm.setRepInId(ras.getRepInId());
			}
		}catch(HibernateException he){
			rasForm=null;
			log.printStackTrace(he);
		}catch(Exception e){
			rasForm=null;
			log.printStackTrace(e);
		}finally{
			if(conn!=null) conn.closeSession();
		}
		
		return rasForm;
	}
	
	/**
	 * 新增方法
	 * 
	 * @author rds 
	 * @date 2006-01-17
	 * 
	 * @param repInId Integer[] 实际子报表Id
	 * @param cause String 重报原因
	 * @return boolean
	 */
	public static boolean insert(Integer[] repInIds,String cause){
		boolean result=false;
		if(repInIds==null || cause==null) return result;
		
		DBConn conn=null;
		Session session=null;
		try{
			conn=new DBConn();
			session=conn.beginTransaction();
			
			for(int i=0;i<repInIds.length;i++){
				ReportAgainSet reportAgainSetPersistence=new ReportAgainSet();
				reportAgainSetPersistence.setCause(cause);
				reportAgainSetPersistence.setRepInId(repInIds[i]);
				reportAgainSetPersistence.setSetDate(new Date());
				/*// System.out.println("cuase:" + cause);
				// System.out.println("repInId:" + repInIds[i]);*/
				
				session.save(reportAgainSetPersistence);
				session.flush();
				result=true;
			}
		}catch(HibernateException he){
			result=false;
			log.printStackTrace(he);
		}catch(Exception e){
			result=false;
			log.printStackTrace(e);
		}finally{
			if(conn!=null) conn.endTransaction(result);
		}
		
		return result;
	}

   /**
    * Create a new com.cbrc.smis.form.ReportAgainSetForm object and persist (i.e. insert) it.
    *
    * @param   reportAgainSetForm   The object containing the data for the new com.cbrc.smis.form.ReportAgainSetForm object
    * @exception   Exception   If the new com.cbrc.smis.form.ReportAgainSetForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.ReportAgainSetForm create (com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = new com.cbrc.smis.hibernate.ReportAgainSet ();
      TranslatorUtil.copyVoToPersistence(reportAgainSetPersistence, reportAgainSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: reportAgainSetPersistence = (com.cbrc.smis.hibernate.ReportAgainSet)session.save(reportAgainSetPersistence);
session.save(reportAgainSetPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportAgainSetPersistence, reportAgainSetForm);
      return reportAgainSetForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.ReportAgainSetForm object.
    *
    * @param   reportAgainSetForm   The com.cbrc.smis.form.ReportAgainSetForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.ReportAgainSetForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.ReportAgainSetForm update (com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = new com.cbrc.smis.hibernate.ReportAgainSet ();
      TranslatorUtil.copyVoToPersistence(reportAgainSetPersistence, reportAgainSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(reportAgainSetPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportAgainSetPersistence, reportAgainSetForm);
      return reportAgainSetForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.ReportAgainSetForm object for editing.
    *
    * @param   reportAgainSetForm   The com.cbrc.smis.form.ReportAgainSetForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.ReportAgainSetForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.ReportAgainSetForm edit (com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = new com.cbrc.smis.hibernate.ReportAgainSet ();
      TranslatorUtil.copyVoToPersistence(reportAgainSetPersistence, reportAgainSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportAgainSetPersistence, reportAgainSetForm);
      return reportAgainSetForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.ReportAgainSetForm object.
    *
    * @param   reportAgainSetForm   The com.cbrc.smis.form.ReportAgainSetForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.ReportAgainSetForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = new com.cbrc.smis.hibernate.ReportAgainSet ();
      TranslatorUtil.copyVoToPersistence(reportAgainSetPersistence, reportAgainSetForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
session.delete(reportAgainSetPersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.ReportAgainSetForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.ReportAgainSetForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportAgainSet"));
tx.commit();
session.close();
      ArrayList reportAgainSet_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.ReportAgainSetForm reportAgainSetFormTemp = new com.cbrc.smis.form.ReportAgainSetForm();
         com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = (com.cbrc.smis.hibernate.ReportAgainSet)it.next();
         TranslatorUtil.copyPersistenceToVo(reportAgainSetPersistence, reportAgainSetFormTemp);
         reportAgainSet_vos.add(reportAgainSetFormTemp);
      }
      retVals = reportAgainSet_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.ReportAgainSetForm objects for editing.
    *
    * @param   reportAgainSetForm   The com.cbrc.smis.form.ReportAgainSetForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.ReportAgainSetForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportAgainSet as obj1 where obj1.cause='" + reportAgainSetForm.getCause() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportAgainSet as obj1 where obj1.setDate='" + reportAgainSetForm.getSetDate() + "'"));
tx.commit();
session.close();
      ArrayList reportAgainSet_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.ReportAgainSetForm reportAgainSetFormTemp = new com.cbrc.smis.form.ReportAgainSetForm();
         com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = (com.cbrc.smis.hibernate.ReportAgainSet)it.next();
         TranslatorUtil.copyPersistenceToVo(reportAgainSetPersistence, reportAgainSetFormTemp);
         reportAgainSet_vos.add(reportAgainSetFormTemp);
      }
      retVals = reportAgainSet_vos;
      return retVals;
   }

   /**
    * This method will return all objects referenced by ReportIn
    */
   public static List getReportIn(com.cbrc.smis.form.ReportAgainSetForm reportAgainSetForm) throws Exception {
      List retVals = new ArrayList();
      com.cbrc.smis.hibernate.ReportAgainSet reportAgainSetPersistence = null;
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
tx.commit();
session.close();
retVals.add(reportAgainSetPersistence.getReportIn());
      ArrayList REP_IN_ID_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.ReportInForm REP_IN_ID_Temp = new com.cbrc.smis.form.ReportInForm();
         com.cbrc.smis.hibernate.ReportIn REP_IN_ID_PO = (com.cbrc.smis.hibernate.ReportIn)it.next();
         TranslatorUtil.copyPersistenceToVo(REP_IN_ID_PO, REP_IN_ID_Temp);
         REP_IN_ID_vos.add(REP_IN_ID_Temp);
      }
      retVals = REP_IN_ID_vos;
      return retVals;
    }
}
