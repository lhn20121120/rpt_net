
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for Document data (i.e. 
 * com.cbrc.smis.form.DocumentForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsDocumentDelegate {


   /**
    * Create a new com.cbrc.smis.form.DocumentForm object and persist (i.e. insert) it.
    *
    * @param   documentForm   The object containing the data for the new com.cbrc.smis.form.DocumentForm object
    * @exception   Exception   If the new com.cbrc.smis.form.DocumentForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.DocumentForm create (com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      com.cbrc.smis.hibernate.Document documentPersistence = new com.cbrc.smis.hibernate.Document ();
      TranslatorUtil.copyVoToPersistence(documentPersistence, documentForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: documentPersistence = (com.cbrc.smis.hibernate.Document)session.save(documentPersistence);
session.save(documentPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(documentPersistence, documentForm);
      return documentForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.DocumentForm object.
    *
    * @param   documentForm   The com.cbrc.smis.form.DocumentForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.DocumentForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.DocumentForm update (com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      com.cbrc.smis.hibernate.Document documentPersistence = new com.cbrc.smis.hibernate.Document ();
      TranslatorUtil.copyVoToPersistence(documentPersistence, documentForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(documentPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(documentPersistence, documentForm);
      return documentForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.DocumentForm object for editing.
    *
    * @param   documentForm   The com.cbrc.smis.form.DocumentForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.DocumentForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.DocumentForm edit (com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      com.cbrc.smis.hibernate.Document documentPersistence = new com.cbrc.smis.hibernate.Document ();
      TranslatorUtil.copyVoToPersistence(documentPersistence, documentForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
documentPersistence = (com.cbrc.smis.hibernate.Document)session.load(com.cbrc.smis.hibernate.Document.class, documentPersistence.getDocId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(documentPersistence, documentForm);
      return documentForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.DocumentForm object.
    *
    * @param   documentForm   The com.cbrc.smis.form.DocumentForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.DocumentForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      com.cbrc.smis.hibernate.Document documentPersistence = new com.cbrc.smis.hibernate.Document ();
      TranslatorUtil.copyVoToPersistence(documentPersistence, documentForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
documentPersistence = (com.cbrc.smis.hibernate.Document)session.load(com.cbrc.smis.hibernate.Document.class, documentPersistence.getDocId());
session.delete(documentPersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.DocumentForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.DocumentForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document"));
tx.commit();
session.close();
      ArrayList document_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.DocumentForm documentFormTemp = new com.cbrc.smis.form.DocumentForm();
         com.cbrc.smis.hibernate.Document documentPersistence = (com.cbrc.smis.hibernate.Document)it.next();
         TranslatorUtil.copyPersistenceToVo(documentPersistence, documentFormTemp);
         document_vos.add(documentFormTemp);
      }
      retVals = document_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.DocumentForm objects for editing.
    *
    * @param   documentForm   The com.cbrc.smis.form.DocumentForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.DocumentForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.docType='" + documentForm.getDocType() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.docSize='" + documentForm.getDocSize() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.docDate='" + documentForm.getDocDate() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.docMemo='" + documentForm.getDocMemo() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.writer='" + documentForm.getWriter() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.checker='" + documentForm.getChecker() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.Document as obj1 where obj1.principal='" + documentForm.getPrincipal() + "'"));
tx.commit();
session.close();
      ArrayList document_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.DocumentForm documentFormTemp = new com.cbrc.smis.form.DocumentForm();
         com.cbrc.smis.hibernate.Document documentPersistence = (com.cbrc.smis.hibernate.Document)it.next();
         TranslatorUtil.copyPersistenceToVo(documentPersistence, documentFormTemp);
         document_vos.add(documentFormTemp);
      }
      retVals = document_vos;
      return retVals;
   }

   /**
    * This method will return all objects referenced by MOrg
    */
   public static List getMOrg(com.cbrc.smis.form.DocumentForm documentForm) throws Exception {
      List retVals = new ArrayList();
      /*com.cbrc.smis.hibernate.Document documentPersistence = null;
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
documentPersistence = (com.cbrc.smis.hibernate.Document)session.load(com.cbrc.smis.hibernate.Document.class, documentPersistence.getDocId());
tx.commit();
session.close();
retVals.add(documentPersistence.getMOrg());
      ArrayList ORG_ID_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.MOrgForm ORG_ID_Temp = new com.cbrc.smis.form.MOrgForm();
         com.cbrc.smis.hibernate.MOrg ORG_ID_PO = (com.cbrc.smis.hibernate.MOrg)it.next();
         TranslatorUtil.copyPersistenceToVo(ORG_ID_PO, ORG_ID_Temp);
         ORG_ID_vos.add(ORG_ID_Temp);
      }
      retVals = ORG_ID_vos;*/
      return retVals;
    }
}
