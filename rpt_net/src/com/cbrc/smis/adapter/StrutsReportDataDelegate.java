
package com.cbrc.smis.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;

import com.cbrc.smis.dao.DBConn;
import com.cbrc.smis.form.ReportDataForm;
import com.cbrc.smis.hibernate.ReportData;
import com.cbrc.smis.hibernate.ReportDataPK;
import com.cbrc.smis.util.FitechException;
/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for ReportData data (i.e. 
 * com.cbrc.smis.form.ReportDataForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsReportDataDelegate {
	private static FitechException log=new FitechException(StrutsReportDataDelegate.class);
	
	/**
	 * 子报表实际数据入库
	 * 
	 * @author rds
	 * @serialData 2005-12-08
	 * 
	 * @param reportDataForm ReportDataForm
	 * @return boolean 操作成功，返回true;否则，返回false
	 */
	public static boolean insert(ReportDataForm reportDataForm){
		boolean result=false;
		
		if(reportDataForm==null) return result;
		
		DBConn conn=null;
		Session session=null;
		
		try{
			ReportData reportData=new ReportData();
			TranslatorUtil.copyVoToPersistence(reportData,reportDataForm);
			
			conn=new DBConn();
			session=conn.beginTransaction();
			session.save(reportData);
			session.flush();
			
			result=true;
		}catch(HibernateException he){
			log.printStackTrace(he);
		}catch(Exception e){
			log.printStackTrace(e);
		}finally{
			if(conn!=null) conn.endTransaction(result);
		}
		
		return result;
	}
	
	/**
	 * 获取子报表的实际数据信息
	 * 
	 * @param childRepId String 子报表ID
	 * @param versionId String 版本号
	 * @return ReportDataForm
	 */
	public static ReportDataForm getReportData(String childRepId,String versionId){
		ReportDataForm form=null;
		
		if(childRepId==null || versionId==null) return form;
			
		DBConn conn=null;
		
		try{
			conn=new DBConn();
			
			ReportDataPK pk=new ReportDataPK();
			pk.setChildRepId(childRepId);
			pk.setVersionId(versionId);
			
			ReportData reportData=(ReportData)conn.openSession().get(ReportData.class,pk);
			
			if(reportData!=null){
				form=new ReportDataForm();
				TranslatorUtil.copyPersistenceToVo(reportData,form);
			}
		}catch(HibernateException he){
			form=null;
			log.printStackTrace(he);
		}catch(Exception e){
			form=null;
			log.printStackTrace(e);
		}finally{
			if(conn!=null) conn.closeSession();
		}
		
		return form;
	}
	
   /**
    * Create a new com.cbrc.smis.form.ReportDataForm object and persist (i.e. insert) it.
    *
    * @param   reportDataForm   The object containing the data for the new com.cbrc.smis.form.ReportDataForm object
    * @exception   Exception   If the new com.cbrc.smis.form.ReportDataForm object cannot be created or persisted.
    */
   public static com.cbrc.smis.form.ReportDataForm create (com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      com.cbrc.smis.hibernate.ReportData reportDataPersistence = new com.cbrc.smis.hibernate.ReportData ();
      TranslatorUtil.copyVoToPersistence(reportDataPersistence, reportDataForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: reportDataPersistence = (com.cbrc.smis.hibernate.ReportData)session.save(reportDataPersistence);
session.save(reportDataPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportDataPersistence, reportDataForm);
      return reportDataForm;
   }

   /**
    * Update (i.e. persist) an existing com.cbrc.smis.form.ReportDataForm object.
    *
    * @param   reportDataForm   The com.cbrc.smis.form.ReportDataForm object containing the data to be updated
    * @exception   Exception   If the com.cbrc.smis.form.ReportDataForm object cannot be updated/persisted.
    */
   public static com.cbrc.smis.form.ReportDataForm update (com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      com.cbrc.smis.hibernate.ReportData reportDataPersistence = new com.cbrc.smis.hibernate.ReportData ();
      TranslatorUtil.copyVoToPersistence(reportDataPersistence, reportDataForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
session.update(reportDataPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportDataPersistence, reportDataForm);
      return reportDataForm;
   }

   /**
    * Retrieve an existing com.cbrc.smis.form.ReportDataForm object for editing.
    *
    * @param   reportDataForm   The com.cbrc.smis.form.ReportDataForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.smis.form.ReportDataForm object cannot be retrieved.
    */
   public static com.cbrc.smis.form.ReportDataForm edit (com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      com.cbrc.smis.hibernate.ReportData reportDataPersistence = new com.cbrc.smis.hibernate.ReportData ();
      TranslatorUtil.copyVoToPersistence(reportDataPersistence, reportDataForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(reportDataPersistence, reportDataForm);
      return reportDataForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.smis.form.ReportDataForm object.
    *
    * @param   reportDataForm   The com.cbrc.smis.form.ReportDataForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.smis.form.ReportDataForm object cannot be removed.
    */  
   public static void remove (com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      com.cbrc.smis.hibernate.ReportData reportDataPersistence = new com.cbrc.smis.hibernate.ReportData ();
      TranslatorUtil.copyVoToPersistence(reportDataPersistence, reportDataForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
session.delete(reportDataPersistence);
tx.commit();
session.close();
   }

   /**
    * Retrieve all existing com.cbrc.smis.form.ReportDataForm objects.
    *
    * @exception   Exception   If the com.cbrc.smis.form.ReportDataForm objects cannot be retrieved.
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportData"));
tx.commit();
session.close();
      ArrayList reportData_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.ReportDataForm reportDataFormTemp = new com.cbrc.smis.form.ReportDataForm();
         com.cbrc.smis.hibernate.ReportData reportDataPersistence = (com.cbrc.smis.hibernate.ReportData)it.next();
         TranslatorUtil.copyPersistenceToVo(reportDataPersistence, reportDataFormTemp);
         reportData_vos.add(reportDataFormTemp);
      }
      retVals = reportData_vos;
      return retVals;
   }

   /**
    * Retrieve a set of existing com.cbrc.smis.form.ReportDataForm objects for editing.
    *
    * @param   reportDataForm   The com.cbrc.smis.form.ReportDataForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.smis.form.ReportDataForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportData as obj1 where obj1.pdf='" + reportDataForm.getPdf() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportData as obj1 where obj1.note='" + reportDataForm.getNote() + "'"));
retVals.addAll(session.find("from com.cbrc.smis.hibernate.ReportData as obj1 where obj1.xml='" + reportDataForm.getXml() + "'"));
tx.commit();
session.close();
      ArrayList reportData_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.ReportDataForm reportDataFormTemp = new com.cbrc.smis.form.ReportDataForm();
         com.cbrc.smis.hibernate.ReportData reportDataPersistence = (com.cbrc.smis.hibernate.ReportData)it.next();
         TranslatorUtil.copyPersistenceToVo(reportDataPersistence, reportDataFormTemp);
         reportData_vos.add(reportDataFormTemp);
      }
      retVals = reportData_vos;
      return retVals;
   }

   /**
    * This method will return all objects referenced by MChildReport
    */
   public static List getMChildReport(com.cbrc.smis.form.ReportDataForm reportDataForm) throws Exception {
      List retVals = new ArrayList();
      com.cbrc.smis.hibernate.ReportData reportDataPersistence = null;
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
tx.commit();
session.close();
retVals.add(reportDataPersistence.getMChildReport());
      ArrayList CHILD_REP_ID_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.smis.form.MChildReportForm CHILD_REP_ID_Temp = new com.cbrc.smis.form.MChildReportForm();
         com.cbrc.smis.hibernate.MChildReport CHILD_REP_ID_PO = (com.cbrc.smis.hibernate.MChildReport)it.next();
         TranslatorUtil.copyPersistenceToVo(CHILD_REP_ID_PO, CHILD_REP_ID_Temp);
         CHILD_REP_ID_vos.add(CHILD_REP_ID_Temp);
      }
      retVals = CHILD_REP_ID_vos;
      return retVals;
    }
}
