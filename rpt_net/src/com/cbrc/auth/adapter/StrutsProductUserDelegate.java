
package com.cbrc.auth.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;

import com.cbrc.auth.form.ProductUserForm;
import com.cbrc.auth.hibernate.ProductUser;
import com.cbrc.smis.dao.DBConn;
import com.cbrc.smis.util.FitechException;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for ProductUser data (i.e. 
 * com.cbrc.auth.form.ProductUserForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsProductUserDelegate {
    private static FitechException log = new FitechException(StrutsProductUserDelegate.class); 

   /**
    * Create a new com.cbrc.auth.form.ProductUserForm object and persist (i.e. insert) it.
    *
    * @param   productUserForm   The object containing the data for the new com.cbrc.auth.form.ProductUserForm object
    * @exception   Exception   If the new com.cbrc.auth.form.ProductUserForm object cannot be created or persisted.
    */
   public static com.cbrc.auth.form.ProductUserForm create (com.cbrc.auth.form.ProductUserForm productUserForm) throws Exception {
      com.cbrc.auth.hibernate.ProductUser productUserPersistence = new com.cbrc.auth.hibernate.ProductUser ();
      TranslatorUtil.copyVoToPersistence(productUserPersistence, productUserForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO error?: productUserPersistence = (com.cbrc.auth.hibernate.ProductUser)session.save(productUserPersistence);
session.save(productUserPersistence);
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(productUserPersistence, productUserForm);
      return productUserForm;
   }

   /**
    * Retrieve an existing com.cbrc.auth.form.ProductUserForm object for editing.
    *
    * @param   productUserForm   The com.cbrc.auth.form.ProductUserForm object containing the data used to retrieve the object (i.e. the primary key info).
    * @exception   Exception   If the com.cbrc.auth.form.ProductUserForm object cannot be retrieved.
    */
   public static com.cbrc.auth.form.ProductUserForm edit (com.cbrc.auth.form.ProductUserForm productUserForm) throws Exception {
      com.cbrc.auth.hibernate.ProductUser productUserPersistence = new com.cbrc.auth.hibernate.ProductUser ();
      TranslatorUtil.copyVoToPersistence(productUserPersistence, productUserForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
productUserPersistence = (com.cbrc.auth.hibernate.ProductUser)session.load(com.cbrc.auth.hibernate.ProductUser.class, productUserPersistence.getProductUserId());
tx.commit();
session.close();
      TranslatorUtil.copyPersistenceToVo(productUserPersistence, productUserForm);
      return productUserForm;
   }

   /**
    * Remove (delete) an existing com.cbrc.auth.form.ProductUserForm object.
    *
    * @param   productUserForm   The com.cbrc.auth.form.ProductUserForm object containing the data to be deleted.
    * @exception   Exception   If the com.cbrc.auth.form.ProductUserForm object cannot be removed.
    */  
   public static void remove (com.cbrc.auth.form.ProductUserForm productUserForm) throws Exception {
      com.cbrc.auth.hibernate.ProductUser productUserPersistence = new com.cbrc.auth.hibernate.ProductUser ();
      TranslatorUtil.copyVoToPersistence(productUserPersistence, productUserForm);
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
// TODO: is this really needed?
productUserPersistence = (com.cbrc.auth.hibernate.ProductUser)session.load(com.cbrc.auth.hibernate.ProductUser.class, productUserPersistence.getProductUserId());
session.delete(productUserPersistence);
tx.commit();
session.close();
   }

   /**
    * 取得所有系统用户信息
    * @author gujie
    *
    * @return 所有系统用户信息
    */
   public static List findAll () throws Exception {
      
	   List result = null;
	   DBConn conn = null;
	   Session session = null;
	   try{
		   conn = new DBConn();
		   session = conn.openSession();
		   List list = session.find("from ProductUser");
		   if(list!=null && list.size()!=0)
           {
               result = new ArrayList();
               for(Iterator it = list.iterator(); it.hasNext();)
               {
                   ProductUserForm form = new ProductUserForm();
                   ProductUser productUserSistence = (ProductUser)it.next();
                   TranslatorUtil.copyPersistenceToVo(productUserSistence,form);
                   result.add(form);
               } 
           }
          
	   }
	   catch(HibernateException he){
		   result = null;
		   he.printStackTrace();
		   
	   }
	   finally{
		   if(conn!=null)
			   conn.closeSession();
	   }
	   return result;
	   
   }
   /**
    * 更新当前系统用户
    * @param productUserForm
    * @return 是否更新成功标志
    * @throws Exception
    */
   public static boolean update (ProductUserForm productUserForm) throws Exception {
	    
       boolean result = false;
       DBConn conn =null;
       Session session =null;
       if(productUserForm!=null)
       {
           try
           {
               conn = new DBConn();
               session = conn.beginTransaction(); 
               ProductUser curUser = getCurrentSysUser();
               curUser.setFlag("0");
               session.update(curUser);
               
               ProductUser productuser = (ProductUser)session.load(ProductUser.class,productUserForm.getProductUserId());
               
               productuser.setFlag("1");
                             
               session.update(productuser);
               session.flush();
               result = true;
           }
           catch(Exception e)
           {
               log.printStackTrace(e);
               result = false;
           }
           finally{
               if(conn!=null)
                   conn.endTransaction(result);
           }
       }
      return result;
   }

   /**
    * Retrieve a set of existing com.cbrc.auth.form.ProductUserForm objects for editing.
    *
    * @param   productUserForm   The com.cbrc.auth.form.ProductUserForm object containing the data used to retrieve the objects (i.e. the criteria for the retrieval).
    * @exception   Exception   If the com.cbrc.auth.form.ProductUserForm objects cannot be retrieved.
    */
   public static List select (com.cbrc.auth.form.ProductUserForm productUserForm) throws Exception {
      List retVals = new ArrayList();
javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory)ctx.lookup("java:AirlineHibernateFactory");
net.sf.hibernate.Session session = factory.openSession();
net.sf.hibernate.Transaction tx = session.beginTransaction();
retVals.addAll(session.find("from com.cbrc.auth.hibernate.ProductUser as obj1 where obj1.productUserName='" + productUserForm.getProductUserName() + "'"));
tx.commit();
session.close();
      ArrayList productUser_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.cbrc.auth.form.ProductUserForm productUserFormTemp = new com.cbrc.auth.form.ProductUserForm();
         com.cbrc.auth.hibernate.ProductUser productUserPersistence = (com.cbrc.auth.hibernate.ProductUser)it.next();
         TranslatorUtil.copyPersistenceToVo(productUserPersistence, productUserFormTemp);
         productUser_vos.add(productUserFormTemp);
      }
      retVals = productUser_vos;
      return retVals;
   }
   /**
    * 取得当前系统用户编号
    * @author 姚捷
    * @return int当前系统用户编号
    */
   public static Long getCurSysUserID() throws Exception
   {
       return  getCurrentSysUser().getProductUserId();   
   }
   
   /**
    * 取得当前系统用户信息
    * @author 姚捷
    * @return ProductUser 当前系统用户信息
    */
   public static ProductUser getCurrentSysUser() throws Exception
   {
       ProductUser curUser = null;
       DBConn conn =null;     
       try
       {
           conn = new DBConn();
           Session session = conn.openSession();
           String hql = "from ProductUser pu where pu.flag='1'";
           List list = session.find(hql);    
           if(list!=null && list.size()!=0)
               curUser = (ProductUser)list.get(0);
       }
       catch(Exception e)
       {
           curUser = null;
           log.printStackTrace(e);
       }
       finally{
           if(conn!=null)
               conn.closeSession();
       }
       return curUser;         
   }
}
