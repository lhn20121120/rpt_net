package com.cbrc.org.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.Query;
import net.sf.hibernate.Session;

import com.cbrc.org.dao.DBConn;
import com.cbrc.org.form.DeputationForm;
import com.cbrc.org.hibernate.MOrgCode;
import com.cbrc.org.hibernate.MToRepOrg;

/**
 * This is a delegate class to handle interaction with the backend persistence
 * layer of hibernate. It has a set of methods to handle persistence for
 * MToRepOrg data (i.e. com.cbrc.org.form.MToRepOrgForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsMToRepOrgDelegate {

	/**
	 * Create a new com.cbrc.org.form.MToRepOrgForm object and persist (i.e.
	 * insert) it.
	 * 
	 * @param mToRepOrgForm
	 *            The object containing the data for the new
	 *            com.cbrc.org.form.MToRepOrgForm object
	 * @exception Exception
	 *                If the new com.cbrc.org.form.MToRepOrgForm object cannot
	 *                be created or persisted.
	 */
	public static com.cbrc.org.form.MToRepOrgForm create(
			com.cbrc.org.form.MToRepOrgForm mToRepOrgForm) throws Exception {
		com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = new com.cbrc.org.hibernate.MToRepOrg();
		TranslatorUtil.copyVoToPersistence(mToRepOrgPersistence, mToRepOrgForm);
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		// TODO error?: mToRepOrgPersistence =
		// (com.cbrc.org.hibernate.MToRepOrg)session.save(mToRepOrgPersistence);
		session.save(mToRepOrgPersistence);
		tx.commit();
		session.close();
		TranslatorUtil.copyPersistenceToVo(mToRepOrgPersistence, mToRepOrgForm);
		return mToRepOrgForm;
	}

	/**
	 * Update (i.e. persist) an existing com.cbrc.org.form.MToRepOrgForm object.
	 * 
	 * @param mToRepOrgForm
	 *            The com.cbrc.org.form.MToRepOrgForm object containing the data
	 *            to be updated
	 * @exception Exception
	 *                If the com.cbrc.org.form.MToRepOrgForm object cannot be
	 *                updated/persisted.
	 */
	public static com.cbrc.org.form.MToRepOrgForm update(
			com.cbrc.org.form.MToRepOrgForm mToRepOrgForm) throws Exception {
		com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = new com.cbrc.org.hibernate.MToRepOrg();
		TranslatorUtil.copyVoToPersistence(mToRepOrgPersistence, mToRepOrgForm);
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		session.update(mToRepOrgPersistence);
		tx.commit();
		session.close();
		TranslatorUtil.copyPersistenceToVo(mToRepOrgPersistence, mToRepOrgForm);
		return mToRepOrgForm;
	}

	/**
	 * Retrieve an existing com.cbrc.org.form.MToRepOrgForm object for editing.
	 * 
	 * @param mToRepOrgForm
	 *            The com.cbrc.org.form.MToRepOrgForm object containing the data
	 *            used to retrieve the object (i.e. the primary key info).
	 * @exception Exception
	 *                If the com.cbrc.org.form.MToRepOrgForm object cannot be
	 *                retrieved.
	 */
	public static com.cbrc.org.form.MToRepOrgForm edit(
			com.cbrc.org.form.MToRepOrgForm mToRepOrgForm) throws Exception {
		com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = new com.cbrc.org.hibernate.MToRepOrg();
		TranslatorUtil.copyVoToPersistence(mToRepOrgPersistence, mToRepOrgForm);
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		mToRepOrgPersistence = (com.cbrc.org.hibernate.MToRepOrg) session.load(
				com.cbrc.org.hibernate.MToRepOrg.class, mToRepOrgPersistence
						.getOrgId());
		tx.commit();
		session.close();
		TranslatorUtil.copyPersistenceToVo(mToRepOrgPersistence, mToRepOrgForm);
		return mToRepOrgForm;
	}

	/**
	 * Remove (delete) an existing com.cbrc.org.form.MToRepOrgForm object.
	 * 
	 * @param mToRepOrgForm
	 *            The com.cbrc.org.form.MToRepOrgForm object containing the data
	 *            to be deleted.
	 * @exception Exception
	 *                If the com.cbrc.org.form.MToRepOrgForm object cannot be
	 *                removed.
	 */
	public static void remove(com.cbrc.org.form.MToRepOrgForm mToRepOrgForm)
			throws Exception {
		com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = new com.cbrc.org.hibernate.MToRepOrg();
		TranslatorUtil.copyVoToPersistence(mToRepOrgPersistence, mToRepOrgForm);
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		// TODO: is this really needed?
		mToRepOrgPersistence = (com.cbrc.org.hibernate.MToRepOrg) session.load(
				com.cbrc.org.hibernate.MToRepOrg.class, mToRepOrgPersistence
						.getOrgId());
		session.delete(mToRepOrgPersistence);
		tx.commit();
		session.close();
	}

	/**
	 * Retrieve all existing com.cbrc.org.form.MToRepOrgForm objects.
	 * 
	 * @exception Exception
	 *                If the com.cbrc.org.form.MToRepOrgForm objects cannot be
	 *                retrieved.
	 */
	public static List findAll() throws Exception {
		List retVals = new ArrayList();
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		retVals.addAll(session.find("from com.cbrc.org.hibernate.MToRepOrg"));
		tx.commit();
		session.close();
		ArrayList mToRepOrg_vos = new ArrayList();
		for (Iterator it = retVals.iterator(); it.hasNext();) {
			com.cbrc.org.form.MToRepOrgForm mToRepOrgFormTemp = new com.cbrc.org.form.MToRepOrgForm();
			com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = (com.cbrc.org.hibernate.MToRepOrg) it
					.next();
			TranslatorUtil.copyPersistenceToVo(mToRepOrgPersistence,
					mToRepOrgFormTemp);
			mToRepOrg_vos.add(mToRepOrgFormTemp);
		}
		retVals = mToRepOrg_vos;
		return retVals;
	}

	/**
	 * Retrieve a set of existing com.cbrc.org.form.MToRepOrgForm objects for
	 * editing.
	 * 
	 * @param mToRepOrgForm
	 *            The com.cbrc.org.form.MToRepOrgForm object containing the data
	 *            used to retrieve the objects (i.e. the criteria for the
	 *            retrieval).
	 * @exception Exception
	 *                If the com.cbrc.org.form.MToRepOrgForm objects cannot be
	 *                retrieved.
	 */
	public static List select(com.cbrc.org.form.MToRepOrgForm mToRepOrgForm)
			throws Exception {
		List retVals = new ArrayList();
		javax.naming.InitialContext ctx = new javax.naming.InitialContext();
		// TODO: Make adapter get SessionFactory jndi name by ant task argument?
		net.sf.hibernate.SessionFactory factory = (net.sf.hibernate.SessionFactory) ctx
				.lookup("java:AirlineHibernateFactory");
		net.sf.hibernate.Session session = factory.openSession();
		net.sf.hibernate.Transaction tx = session.beginTransaction();
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.orgName='"
								+ mToRepOrgForm.getOrgName() + "'"));
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.startDate='"
								+ mToRepOrgForm.getStartDate() + "'"));
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.endDate='"
								+ mToRepOrgForm.getEndDate() + "'"));
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.licence='"
								+ mToRepOrgForm.getLicence() + "'"));
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.orgCode='"
								+ mToRepOrgForm.getOrgCode() + "'"));
		retVals
				.addAll(session
						.find("from com.cbrc.org.hibernate.MToRepOrg as obj1 where obj1.orgClsId='"
								+ mToRepOrgForm.getOrgClsId() + "'"));
		tx.commit();
		session.close();
		ArrayList mToRepOrg_vos = new ArrayList();
		for (Iterator it = retVals.iterator(); it.hasNext();) {
			com.cbrc.org.form.MToRepOrgForm mToRepOrgFormTemp = new com.cbrc.org.form.MToRepOrgForm();
			com.cbrc.org.hibernate.MToRepOrg mToRepOrgPersistence = (com.cbrc.org.hibernate.MToRepOrg) it
					.next();
			TranslatorUtil.copyPersistenceToVo(mToRepOrgPersistence,
					mToRepOrgFormTemp);
			mToRepOrg_vos.add(mToRepOrgFormTemp);
		}
		retVals = mToRepOrg_vos;
		return retVals;
	}

	/**
	 * @author cb
	 * 
	 * 根据输入的机构ID从数据库中得到一条上报机构记录
	 * 
	 * @param orgId
	 *            机构ID
	 * @return type : MToRepOrg代报机构  如果不存在则返回NULL
	 * @throws Exception
	 */
	public static MToRepOrg getMToRepOrg(String orgId) throws Exception {

		MToRepOrg mToRepOrg = null;

		DBConn dBConn = null;

		Session session = null;

		try {

			dBConn = new DBConn();

			session = dBConn.openSession();

			mToRepOrg = (MToRepOrg) session.get(MToRepOrg.class, orgId);

		} catch (Exception e) {

			mToRepOrg = null;

		}

		finally {

			dBConn.closeSession();
		}

		return mToRepOrg;
	}

	/**
	 * @author cb
	 * 
	 * 以分页的方式从代报机构库表里拿出从begin开始的count条记录
	 * 
	 * @param begin
	 *            库表的起始序号
	 * @param count
	 *            返回记录的数量
	 * @return type:List 含有多条记录的List集合  如果没有记录则返回NULL
	 * @throws Exception
	 */
	public static List getMToRepOrgs(Session session,int begin, int count) throws Exception {

		List mtros = null;

		Query query = null;

		String hsql = null;

		try {

			hsql = "from MToRepOrg";

			query = session.createQuery(hsql);

			query.setFirstResult(begin);

			query.setMaxResults(count);

			mtros = query.list();
			
			if(mtros.size() == 0)
				
				mtros = null;

		} catch (Exception e) {

			mtros = null;
			
		} 

		return mtros;
	}

	/**
	 * @author cb
	 * 
	 * 返回金融机构MToRepOrg表的记录数
	 * 
	 * @return type:int
	 * @throws Exception
	 */
	public static int getMToRepOrgCount() throws Exception {

		int count = 0;

		DBConn dBConn = null;

		Session session = null;

		String hsql = null;

		Query query = null;

		List l = null;

		try {

			dBConn = new DBConn();

			session = dBConn.openSession();

			hsql = "select count(*) from MToRepOrg";

			query = session.createQuery(hsql);

			l = query.list();

			count = ((Integer) l.get(0)).intValue();

		} catch (Exception e) {

			count = 0;
			
		} finally {

			dBConn.closeSession();
		}
		return count;
	}
	/**
	 * @author cb
	 * 
	 * 根据输入的代报机构参数制造出一个DeputationForm对象,
	 * 并赋予setRelationAlreday属性和setMaxRelation属性
	 * @param session
	 * @param mToRepOrg
	 * @return
	 * @throws Exception
	 */
	public static DeputationForm getDeputationForm(Session session,MToRepOrg mToRepOrg)throws Exception{
		
		DeputationForm  df = null;
		
        df = new DeputationForm();
        
        df.setMToRepOrg(mToRepOrg);   //将参数中的代报机构SET进DeputationForm
       
        String   hsql = null;  
        
        Query  query = null;
        
        List  l = null;
        
        String orgId = mToRepOrg.getOrgId();  //得到代报机构的机构ID
        
        hsql = "select count(*) from MFinaOrg mfo where mfo.orgId=:orgId";  //查询已经由该代报机构代报的金融机构的数量
        
        query = session.createQuery(hsql);
        
        query.setString("orgId",orgId);
        
        l = query.list();
        
        int  setRelationAlreday = ((Integer)l.get(0)).intValue(); //如果没有则相应的值是NULL
        
        
        
        df.setSetRelationAlreday(setRelationAlreday);//将已经设置成由参数中的代报机构代报的金融机构的数量SET进DeputationForm
        
        hsql = "from MOrgCode moc where moc.orgId=:orgId";  //根据代报机构的机构ID查询出该代报机构的机构编码,从而得到该代报机构所处的地区ID
        
        query = session.createQuery(hsql);
        
        query.setString("orgId",orgId);
        
        l = query.list();
        
        if(l.size()==0){
        	
        	df.setSetMaxRelation(0);
        	
        	return df;
        }
        
        
        
        MOrgCode  moc = (MOrgCode)l.get(0);
        
        String  regionId = moc.getRegionId();
        
        hsql = "select count(*) from MFinaOrg mfo where mfo.regionId=:regionId";
        
        query = session.createQuery(hsql);
        
        query.setString("regionId",regionId);
        
        l = query.list();   
        
        int setMaxRelation = ((Integer)l.get(0)).intValue(); 
        
        df.setSetMaxRelation(setMaxRelation);//将可以由该代报机构代报的金融机构的数量SET进DeputationForm
		
		return  df;
		
	     
	}
	/**
	 *该方法根据输入的参数分页显示出一页的DeputationForms
	 * @author cb
	 *
	 * @param begin  记录的起始号
	 * @param count  显示的记录数
	 * @return    type: List 返回一个含有多个DeputationForm的列表
	 * @throws Exception
	 */
	public static List getDeputationForms(int begin,int count)throws Exception{
		
		List  dfs = new ArrayList();
		
		DBConn  dBConn = null;
		
		Session  session = null;
		
		MToRepOrg  mtro = null;
		
		DeputationForm  df = null;
		
		try{
			
			dBConn = new DBConn();
			
			session = dBConn.openSession();
			
			List  l = StrutsMToRepOrgDelegate.getMToRepOrgs(session,begin,count);  //
			
	        if(l == null)
				
				throw new Exception("error");
			
			int  size = l.size();
			
			for(int i=0;i<size;i++){
				
				mtro = (MToRepOrg)l.get(i);
				
			    df = StrutsMToRepOrgDelegate.getDeputationForm(session,mtro);
			    
			    dfs.add(df);
			}
			
			
		}catch(Exception e){
		
			dfs = null; 
		}
		finally{
			
			dBConn.closeSession();
		}
		
		return  dfs;
	}

}
