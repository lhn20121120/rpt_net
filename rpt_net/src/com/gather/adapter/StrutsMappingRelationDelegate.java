
package com.gather.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.Session;

import com.gather.common.Log;
import com.gather.dao.DBConn;
import com.gather.hibernate.MappingRelation;
import com.gather.struts.forms.MappingRelationForm;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for MappingRelation data (i.e. 
 * com.gather.struts.MappingRelationForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsMappingRelationDelegate {


   /**
    * Create a new com.gather.struts.MappingRelationForm object and persist (i.e. insert) it.
    *
    * @param   mappingRelationForm   The object containing the data for the new com.gather.struts.MappingRelationForm object
    * @exception   Exception   If the new com.gather.struts.MappingRelationForm object cannot be created or persisted.
    */
	public static List findById (String orgId) {
	      List list = new ArrayList();
	      DBConn conn=new DBConn();
	      Session session=conn.openSession();
	      String hsql="from com.gather.hibernate.MappingRelation as obj where obj.MOrg.orgId='"+orgId+"'";
	      try{
		       list.addAll(session.find(hsql));
		       session.close();
		      if(list!=null || list.size()>0){
		    	 for(int i=0;i<list.size();i++){
		    		 MappingRelationForm beanForm=new MappingRelationForm();
			    	  MappingRelation myPersistence = (MappingRelation)list.get(i);
			    	  TranslatorUtil.copyPersistenceToVo(myPersistence,beanForm); 
		    	 }
		      }
		      }catch(Exception e){
		    	  new Log(StrutsMappingRelationDelegate.class).info(":::class:StrutsMappingRelationDelegate --  method: findById Òì³££º"+e.getMessage());
		    	  e.printStackTrace();}
		      finally{
		    	  try{
		    		  session.close();
		    	  }catch(Exception e){e.printStackTrace();}
		      }
	      return list;
	   }
	 /**
	    * Update (i.e. persist) an existing com.gather.struts.forms.MappingRelationForm object.
	    *
	    * @param   mappingRelationForm   The com.gather.struts.forms.MappingRelationForm object containing the data to be updated
	    * @exception   Exception   If the com.gather.struts.forms.MappingRelationForm object cannot be updated/persisted.
	    */
	   public static boolean update (com.gather.struts.forms.MappingRelationForm mappingRelationForm) throws Exception {
	      com.gather.hibernate.MappingRelation mappingRelationPersistence = new com.gather.hibernate.MappingRelation ();
	      try{
	      TranslatorUtil.copyVoToPersistence(mappingRelationPersistence, mappingRelationForm);
	      DBConn conn=new DBConn();
	      Session session=conn.beginTransaction();
	      session.update(mappingRelationPersistence);
	      conn.endTransaction(true);
	      return true;
	      }catch(Exception e)
		  {
	      	throw e;
	      	}
	   }	
   public static boolean  create (com.gather.struts.forms.MappingRelationForm mappingRelationForm) throws Exception {
      com.gather.hibernate.MappingRelation mappingRelationPersistence = new com.gather.hibernate.MappingRelation ();
      try{
      TranslatorUtil.copyVoToPersistence(mappingRelationPersistence, mappingRelationForm);
      DBConn conn=new DBConn();
      Session session=conn.beginTransaction();
      session.save(mappingRelationPersistence);
      conn.endTransaction(true);
      return true;
      }catch(Exception e)
      {
    	  new Log(StrutsMappingRelationDelegate.class).info(":::class:StrutsMappingRelationDelegate --  method: create Òì³££º"+e.getMessage());
    	  throw e;
      }
   }
 
   /**
    * @author ¼§»³±¦
    */
   public static List findAll () throws Exception {
      List retVals = new ArrayList();
//javax.naming.InitialContext ctx = new javax.naming.InitialContext();
// TODO: Make adapter get SessionFactory jndi name by ant task argument?
DBConn conn=new DBConn();
Session session=conn.openSession();
retVals.addAll(session.find("from com.gather.hibernate.MappingRelation"));
session.close();
      ArrayList mappingRelation_vos = new ArrayList();
      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
         com.gather.struts.forms.MappingRelationForm mappingRelationFormTemp = new com.gather.struts.forms.MappingRelationForm();
         MappingRelation mappingRelationPersistence = (com.gather.hibernate.MappingRelation)it.next();
         TranslatorUtil.copyPersistenceToVo(mappingRelationPersistence, mappingRelationFormTemp);
         mappingRelation_vos.add(mappingRelationFormTemp);
      }
      retVals = mappingRelation_vos;
  	// System.out.println("jhb");
      return retVals;
   }

   
 }
