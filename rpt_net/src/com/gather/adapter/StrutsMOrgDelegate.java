
package com.gather.adapter;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import net.sf.hibernate.Session;

import com.gather.common.Log;
import com.gather.dao.DBConn;
import com.gather.hibernate.MappingRelation;
import com.gather.struts.forms.MOrgForm;

/**
 * This is a delegate class to handle interaction with the backend persistence layer of hibernate. 
 * It has a set of methods to handle persistence for MOrg data (i.e. 
 * com.gather.struts.forms.MOrgForm objects).
 * 
 * @author <strong>Generated by Middlegen.</strong>
 */
public class StrutsMOrgDelegate {
	
	
	  public static List findOrgById (String orgId) throws Exception {
	      List retVals = new ArrayList();
	      DBConn conn=new DBConn();
	      Session session=conn.openSession();
	              retVals.addAll(session.find("from com.gather.hibernate.MappingRelation as obj1 where obj1.comp_id.orgid='" + orgId + "'"));
	              session.close();
	      ArrayList org_vos = new ArrayList();
	      
	      for (Iterator it = retVals.iterator(); it.hasNext(); ) {
	    	  MOrgForm orgFormTemp = new MOrgForm();
	         MappingRelation MapRelationPersistence = (MappingRelation)it.next();
	         TranslatorUtil.copyPersistenceToVo(MapRelationPersistence, orgFormTemp);
	         org_vos.add(orgFormTemp);
	      }
	      return org_vos;
	   }


	  public static MOrgForm findById (String org){
		  if(org==null) return null;
	      List retVals = new ArrayList();
	      Session session=null;
	      try{
	      DBConn conn=new DBConn();
	      session=conn.openSession();
          retVals.addAll(session.find("from com.gather.hibernate.MOrg as obj1 where obj1.orgId='" + org+ "'"));
	       session.close();
	       if(retVals==null || retVals.size()<1) return null;
	       com.gather.struts.forms.MOrgForm mOrgFormTemp = new com.gather.struts.forms.MOrgForm();
	       com.gather.hibernate.MOrg mOrgPersistence = (com.gather.hibernate.MOrg)retVals.get(0);
	       TranslatorUtil.copyPersistenceToVo(mOrgPersistence, mOrgFormTemp);
	       return mOrgFormTemp;
	      }catch(Exception e){
	    	  new Log(StrutsMOrgDelegate.class).info(":::class:StrutsMOrgDelegate --  method: findById 异常："+e.getMessage());
	    	  e.printStackTrace();
	      }finally{
	    	  try{
	    		  session.close();
	    	  }catch(Exception e){e.printStackTrace();}
	      }
	       return null;
	   }
	  /**
	   * @author linfeng
	   * @function 得到机构名称
	   * @param orgId
	   * @return
	   */
	  public static String getOrgName (String orgId){
		  if(orgId==null) return null;
		  com.gather.struts.forms.MOrgForm mOrgFormTemp=findById(orgId);
		  if(mOrgFormTemp==null) return null;
		  return mOrgFormTemp.getOrgName();
	  }
   /**
    *@姬怀宝
    */
   public static boolean create (com.gather.struts.forms.MOrgForm mOrgForm) throws Exception {
      com.gather.hibernate.MOrg mOrgPersistence = new com.gather.hibernate.MOrg();
      try{
      TranslatorUtil.copyVoToPersistence(mOrgPersistence, mOrgForm);
      DBConn conn=new DBConn();
      Session session=conn.beginTransaction();
      session.save(mOrgPersistence);
      conn.endTransaction(true);
      return true;
      }catch(Exception e)
      {
    	  new Log(StrutsMOrgDelegate.class).info(":::class:StrutsMOrgDelegate --  method: create 异常："+e.getMessage());
    	  throw e;
      }
   }
}
